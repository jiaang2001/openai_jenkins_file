
node('build1'){  
    dir('/root/test/tengine_arm32_cross'){
        sh "pwd"
        sh "hostname"
        stage('Git Pull'){
        
            sh '''#!/bin/bash
                    git pull
            '''
          
        }
        stage('Make'){
        
            sh '''#!/bin/bash
                    make clean
                    make -j4
                    make install
            '''
          
        }
        stage('Make example'){
        
            sh '''#!/bin/bash
                mkdir -p build/examples
                cd build/examples && cmake -DTENGINE_DIR=/root/test/tengine_arm32_cross -DCMAKE_TOOLCHAIN_FILE=/root/test/tengine_arm32_cross/arm32.toolchain.cmake ../../examples/ && make -j4
            '''
        }
        stage('push file to tinkerboard'){
        
            sh '''#!/bin/bash
                scp -r ./install root@192.168.50.207:/root/test/tengine_arm32_cross
                scp -r ./build root@192.168.50.207:/root/test/tengine_arm32_cross
               
            '''
        }
    }
   

}

node('tinkerboard_linux'){  
    dir('/root/cross_test'){

        stage(' Run SqueezeNet'){
            sh "pwd"
            sh "hostname"
            sh '''#!/bin/bash
                    ./bench_sqz -r1
            '''
        }
        

    }
    dir('/root/openai_jenkins_file'){
        sh "pwd"
    
        stage(' Run Jenkins/test'){
        
            sh '''#!/bin/bash
                    git pull
                    pytest test.py  --cmdopt="cc"  --variables=./test_var.json --html=report/test.html --junit-xml=report/test.xml --verbose || true
            ''' 
            junit allowEmptyResults: true, keepLongStdio: true, testResults: 'report/test.xml'
            publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'report/', reportFiles: 'test.html', reportName: 'HTML Report', reportTitles: ''])
        }
    }
   

}
